name: Deploy images

on:
  workflow_dispatch:
    inputs:
      build_only:
        description: Build only? (true|false)
        required: false
        default: 'false'
      specific_job:
        description: Run a specific job? (py27|py37|py38|py39|py310|example)
        required: false
        default: ''

jobs:
  py27:
    if: ${{ github.event.inputs.specific_job == '' || contains(github.event.inputs.specific_job, 'py27') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Build and deploy image 🐳
        uses: docker/build-push-action@v1
        with:
          path: docker
          dockerfile: docker/Dockerfile_27
          repository: riga/law
          tags: py27,py2
          push: ${{ github.event.inputs.build_only != 'true' }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  py37:
    if: ${{ github.event.inputs.specific_job == '' || contains(github.event.inputs.specific_job, 'py37') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Build and deploy image 🐳
        uses: docker/build-push-action@v1
        with:
          path: docker
          dockerfile: docker/Dockerfile_37
          repository: riga/law
          tags: py37
          push: ${{ github.event.inputs.build_only != 'true' }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  py38:
    if: ${{ github.event.inputs.specific_job == '' || contains(github.event.inputs.specific_job, 'py38') || contains(github.event.inputs.specific_job, 'example') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Build and deploy image 🐳
        uses: docker/build-push-action@v1
        with:
          path: docker
          dockerfile: docker/Dockerfile_38
          repository: riga/law
          tags: py38
          push: ${{ github.event.inputs.build_only != 'true' }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  py39:
    if: ${{ github.event.inputs.specific_job == '' || contains(github.event.inputs.specific_job, 'py39') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Build and deploy image 🐳
        uses: docker/build-push-action@v1
        with:
          path: docker
          dockerfile: docker/Dockerfile_39
          repository: riga/law
          tags: py39,py3,latest
          push: ${{ github.event.inputs.build_only != 'true' }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  py310:
    if: ${{ github.event.inputs.specific_job == '' || contains(github.event.inputs.specific_job, 'py310') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Build and deploy image 🐳
        uses: docker/build-push-action@v1
        with:
          path: docker
          dockerfile: docker/Dockerfile_310
          repository: riga/law
          tags: py310
          push: ${{ github.event.inputs.build_only != 'true' }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

  example:
    if: ${{ github.event.inputs.build_only != 'true' && (github.event.inputs.specific_job == '' || contains(github.event.inputs.specific_job, 'example')) }}
    needs: py38
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Build and deploy image 🐳
        uses: docker/build-push-action@v1
        with:
          path: docker
          dockerfile: docker/Dockerfile_example
          repository: riga/law
          tags: example
          push: true
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
